// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team2515;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder.IndexingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.drive.MecanumDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveSystemleftFrontMotor;
    public static SpeedController driveSystemleftRearMotor;
    public static SpeedController driveSystemrightFrontMotor;
    public static SpeedController driveSystemrightRearMotor;
    public static MecanumDrive driveSystemmecanumDrive;
    public static AnalogGyro driveSystemanalogGyro;
    public static SpeedController climbSystemclimbMotor;
    public static DigitalInput clawSystemclawLimit;
    public static SpeedController clawSystemclawMotor;
    public static Encoder liftSystemliftEncoder;
    public static WPI_TalonSRX liftSystemliftMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveSystemleftFrontMotor = new Spark(0);
        LiveWindow.addActuator("driveSystem", "leftFrontMotor", (Spark) driveSystemleftFrontMotor);
        driveSystemleftFrontMotor.setInverted(false);
        driveSystemleftRearMotor = new Spark(1);
        LiveWindow.addActuator("driveSystem", "leftRearMotor", (Spark) driveSystemleftRearMotor);
        driveSystemleftRearMotor.setInverted(false);
        driveSystemrightFrontMotor = new Spark(2);
        LiveWindow.addActuator("driveSystem", "rightFrontMotor", (Spark) driveSystemrightFrontMotor);
        driveSystemrightFrontMotor.setInverted(false);
        driveSystemrightRearMotor = new Spark(3);
        LiveWindow.addActuator("driveSystem", "rightRearMotor", (Spark) driveSystemrightRearMotor);
        driveSystemrightRearMotor.setInverted(false);
        driveSystemmecanumDrive = new MecanumDrive(driveSystemleftFrontMotor, driveSystemleftRearMotor,
              driveSystemrightFrontMotor, driveSystemrightRearMotor);
        LiveWindow.addActuator("driveSystem", "mecanumDrive", driveSystemmecanumDrive);
        driveSystemmecanumDrive.setSafetyEnabled(true);
        driveSystemmecanumDrive.setExpiration(0.1);
        driveSystemmecanumDrive.setMaxOutput(1.0);

        driveSystemanalogGyro = new AnalogGyro(0);
        LiveWindow.addSensor("driveSystem", "analogGyro", driveSystemanalogGyro);
        driveSystemanalogGyro.setSensitivity(0.007);
        climbSystemclimbMotor = new Spark(5);
        LiveWindow.addActuator("climbSystem", "climbMotor", (Spark) climbSystemclimbMotor);
        climbSystemclimbMotor.setInverted(false);
        clawSystemclawLimit = new DigitalInput(0);
        LiveWindow.addSensor("clawSystem", "clawLimit", clawSystemclawLimit);
        
        clawSystemclawMotor = new Jaguar(6);
        LiveWindow.addActuator("clawSystem", "clawMotor", (Jaguar) clawSystemclawMotor);
        clawSystemclawMotor.setInverted(false);
        liftSystemliftEncoder = new Encoder(1, 2, true);
        LiveWindow.addSensor("liftSystem", "liftEncoder", liftSystemliftEncoder);
        liftSystemliftEncoder.setDistancePerPulse(1.0);
        liftSystemliftEncoder.setPIDSourceType(PIDSourceType.kRate);
        liftSystemliftEncoder.setIndexSource(3, IndexingType.kResetOnRisingEdge);
        liftSystemliftMotor = new WPI_TalonSRX(0);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
